{
	"info": {
		"_postman_id": "e303ed36-6457-4fd0-ab89-c4096de47b24",
		"name": "postman course - Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29847694"
	},
	"item": [
		{
			"name": "create a new board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set('newlyCreatedBoard' , response.id);\r",
							"\r",
							"\r",
							"pm.test('validate the board name' , ()=>{\r",
							"  pm.expect(response.name).contains('new Board');  \r",
							"})\r",
							"\r",
							"\r",
							"pm.test('validate the board status' , ()=>{\r",
							"  pm.expect(response.closed).to.be.false;  \r",
							"})\r",
							"\r",
							"pm.test('validate the prefs section' , ()=>{\r",
							"  pm.expect(response.prefs.permissionLevel).eqls('private');  \r",
							"})\r",
							"\r",
							"console.log(response.prefs.permissionLevel);\r",
							"\r",
							"console.log(response.prefs.switcherViews[2].enabled)\r",
							"\r",
							"pm.test('validate the calender View' , ()=>{\r",
							"  pm.expect(response.prefs.switcherViews[2].enabled).to.be.false;  \r",
							"})\r",
							"\r",
							"pm.test('validate the calender ViewII' , ()=>{\r",
							"  let calenderView = response.prefs.switcherViews.find(view => view.viewType === 'Calendar');\r",
							"\r",
							"  pm.expect(calenderView.enabled).to.be.false;  \r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// let boardNumber = pm.collectionVariables.get('boardNumber');\r",
							"// boardNumber++;\r",
							"// pm.collectionVariables.set('boardNumber' , boardNumber);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/?name=new Board {{boardNumber}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "new Board {{boardNumber}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add list to board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set('todoListOnBoardId' , response.id);\r",
							"\r",
							"pm.test('validate the list name ' , ()=>{\r",
							"    pm.expect(response.name).eqls('todo');\r",
							"})\r",
							"\r",
							"pm.test('validate the list status ' , ()=>{\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"})\r",
							"\r",
							"pm.test('validate the id of the board ' , ()=>{\r",
							"    pm.expect(response.idBoard).eqls(pm.collectionVariables.get('newlyCreatedBoard'));\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id/lists?name=todo&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "todo"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newlyCreatedBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add list to board Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set('inprogressListOnBoardId' , response.id);\r",
							"\r",
							"pm.test('validate the list name ' , ()=>{\r",
							"    pm.expect(response.name).eqls('in-progress');\r",
							"})\r",
							"\r",
							"pm.test('validate the list status ' , ()=>{\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"})\r",
							"\r",
							"pm.test('validate the id of the board ' , ()=>{\r",
							"    pm.expect(response.idBoard).eqls(pm.collectionVariables.get('newlyCreatedBoard'));\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id/lists?name=in-progress&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "in-progress"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newlyCreatedBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set('createdCardId' , response.id);\r",
							"\r",
							"pm.test('validate the card name', ()=>{\r",
							"    pm.expect(response.name).eqls('Task')\r",
							"})\r",
							"\r",
							"pm.test('validate that the card belongs to the list ', ()=>{\r",
							"    pm.expect(response.idList).eqls(pm.collectionVariables.get('todoListOnBoardId'));\r",
							"})\r",
							"\r",
							"pm.test('validate that the card belongs to the board ', ()=>{\r",
							"    pm.expect(response.idBoard).eqls(pm.collectionVariables.get('newlyCreatedBoard'));\r",
							"})\r",
							"\r",
							"pm.test('validate that the card has no badges', ()=>{\r",
							"    pm.expect(response.badges.attachmentsByType.trello.card).eqls(0);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards?idList={{todoListOnBoardId}}&key={{trelloKey}}&token={{trelloToken}}&name=Task",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{todoListOnBoardId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "Task"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('validate the new list ID' , ()=>{\r",
							"    pm.expect(response.idList).eqls(pm.collectionVariables.get('inprogressListOnBoardId'));\r",
							"})\r",
							"\r",
							"pm.test('validate the card name' , ()=>{\r",
							"    pm.expect(response.name).eqls('Task');\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{inprogressListOnBoardId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{inprogressListOnBoardId}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{createdCardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set('firstBoardID' , response[0].id);\r",
							"\r",
							"// let allBoardIds = response.map(board=>board.id);\r",
							"// pm.collectionVariables.set('allBoardIds' , allBoardIds);\r",
							"console.log(response.length);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/members/me/boards?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newlyCreatedBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get board lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// pm.collectionVariables.set(response[1].name+'list' , response[1].name);\r",
							"\r",
							"// console.log(response[0].name)\r",
							"\r",
							"for(let i = 0 ; i<response.length ; i++)\r",
							"{\r",
							"    pm.collectionVariables.set(response[i].name+'list' , response[i].name);\r",
							"}\r",
							"\r",
							"for(let i = 0 ; i<response.length ; i++)\r",
							"{\r",
							"    pm.collectionVariables.set(response[i].name+'list'+'id' , response[i].id);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id/lists?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newlyCreatedBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{createdCardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('validate status code is 200' , ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const existingBoardIDs = pm.collectionVariables.get('allBoardIds');\r",
							"// console.log(existingBoardIDs);\r",
							"// const boardID = existingBoardIDs.pop();\r",
							"\r",
							"// pm.collectionVariables.set('firstBoardID', boardID);\r",
							"\r",
							"// pm.collectionVariables.set('existingBoardIDs', existingBoardIDs);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{firstBoardID}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://api.trello.com",
			"type": "string"
		},
		{
			"key": "trelloKey",
			"value": "a89f30b5ff1945ef53ba688c561d9f39",
			"type": "string"
		},
		{
			"key": "trelloToken",
			"value": "ATTAd10c17ebb589c051f68099af9a7ea5518ee0530b6833cd76046cc79d920ce2b5438B7211",
			"type": "string"
		},
		{
			"key": "newlyCreatedBoard",
			"value": "6539706472cf5dcd9c24fb8e"
		},
		{
			"key": "todoListOnBoardId",
			"value": "6539706436625a5ba788a633"
		},
		{
			"key": "inprogressListOnBoardId",
			"value": "65397065019500eaaf275022"
		},
		{
			"key": "createdCardId",
			"value": "653970658a98a7cb1dbd324e"
		},
		{
			"key": "firstBoardID",
			"value": "6539706472cf5dcd9c24fb8e"
		},
		{
			"key": "in-progresslist",
			"value": "in-progress"
		},
		{
			"key": "todolist",
			"value": "todo"
		},
		{
			"key": "To Dolist",
			"value": "To Do"
		},
		{
			"key": "Doinglist",
			"value": "Doing"
		},
		{
			"key": "Donelist",
			"value": "Done"
		},
		{
			"key": "in-progresslistid",
			"value": "65397065019500eaaf275022"
		},
		{
			"key": "todolistid",
			"value": "6539706436625a5ba788a633"
		},
		{
			"key": "To Dolistid",
			"value": "6539706472cf5dcd9c24fb95"
		},
		{
			"key": "Doinglistid",
			"value": "6539706472cf5dcd9c24fb96"
		},
		{
			"key": "Donelistid",
			"value": "6539706472cf5dcd9c24fb97"
		}
	]
}